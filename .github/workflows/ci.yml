name: CI
on:
  pull_request:
  push:
    branches:
      - 'main'
  schedule:
    - cron: '0 0 * * */2'
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings -A unknown-lints
  RUST_BACKTRACE: full
jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup target add wasm32-unknown-unknown --toolchain nightly
    - run: rustup update nightly && rustup default nightly && rustup component add rustfmt
    - run: cargo fmt --all -- --check
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup target add wasm32-unknown-unknown --toolchain nightly
      - run: rustup update nightly && rustup default nightly
      - run: RUSTDOCFLAGS="-D warnings --cfg doc_cfg" cargo +nightly doc --workspace --all-features --no-deps --document-private-items
  lint:
    name: Lint (${{ matrix.os }} + ${{ matrix.channel }})
    needs: [format, docs]
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        channel:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup target add wasm32-unknown-unknown --toolchain ${{ matrix.channel }}
      - run: rustup update ${{ matrix.channel }} && rustup default ${{ matrix.channel }} && rustup component add clippy
      - run: cargo install cargo-hack
      - run: cargo hack clippy --workspace --feature-powerset
      - run: cargo hack clippy --workspace --feature-powerset --bins
      - run: cargo hack clippy --workspace --feature-powerset --examples
      - run: cargo hack clippy --workspace --feature-powerset --tests
  test:
    name: Test (${{ matrix.os }} + ${{ matrix.channel }})
    needs: [format, docs]
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        channel:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup target add wasm32-unknown-unknown --toolchain ${{ matrix.channel }}
      - run: rustup update ${{ matrix.channel }} && rustup default ${{ matrix.channel }}
      - run: cargo install cargo-nextest
      - run: cargo nextest run --workspace --release --all-features
  compile-bench:
    name: Compile Bench (${{ matrix.os }} + ${{ matrix.channel }})
    needs: [format, docs]
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        channel:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup target add wasm32-unknown-unknown --toolchain ${{ matrix.channel }}
      - run: rustup update ${{ matrix.channel }} && rustup default ${{ matrix.channel }}
      - run: cargo bench --workspace --no-run --all-features
